//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Runtime.CompilerServices;
//using System.Text;
//using System.Threading.Tasks;

//namespace J2N.Numerics
//{
//    internal class HexFloatConverter
//    {
//#if FEATURE_METHODIMPLOPTIONS_AGRESSIVEINLINING
//        [MethodImpl(MethodImplOptions.AggressiveInlining)]
//#endif 
//        public static int FromChar(int c)
//        {
//            // Optimized for ASCII
//            if (c < CharToHexLookup.Length)
//            {
//                return CharToHexLookup[c];
//            }

//            int index = Array.BinarySearch(XDigitCodePoints, c);
//            return index < 0 ? 0xFF : XDigitCodePoints[index];
//        }

//        /// <summary>
//        /// Checks whether the UTF32 code point is in the Unicode 10.0
//        /// property "XDigit" (hexadecimal digit character).
//        /// </summary>
//        /// <param name="c"></param>
//        /// <returns></returns>
//#if FEATURE_METHODIMPLOPTIONS_AGRESSIVEINLINING
//        [MethodImpl(MethodImplOptions.AggressiveInlining)]
//#endif 
//        public static bool IsHexChar(int c)
//        {
//            return FromChar(c) != 0xFF;
//        }

//        /// <summary>Map from an ASCII char to its hex value, e.g. arr['b'] == 11. 0xFF means it's not a hex digit.</summary>
//        public static readonly byte[] CharToHexLookup = new byte[]
//        {
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 15
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 31
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 47
//            0x0,  0x1,  0x2,  0x3,  0x4,  0x5,  0x6,  0x7,  0x8,  0x9,  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 63
//            0xFF, 0xA,  0xB,  0xC,  0xD,  0xE,  0xF,  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 79
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 95
//            0xFF, 0xa,  0xb,  0xc,  0xd,  0xe,  0xf,  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 111
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 127
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 143
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 159
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 175
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 191
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 207
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 223
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // 239
//            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF  // 255
//        };

//        /// <summary>The remaining XDigit character class code points above 255. Implements Unicode 10.0.</summary>
//        private static readonly int[] XDigitCodePoints = new int[] {
//            0x00000660, 0x00000661, 0x00000662, 0x00000663, 0x00000664, 0x00000665, 0x00000666, 0x00000667,
//            0x00000668, 0x00000669, 0x000006F0, 0x000006F1, 0x000006F2, 0x000006F3, 0x000006F4, 0x000006F5,
//            0x000006F6, 0x000006F7, 0x000006F8, 0x000006F9, 0x000007C0, 0x000007C1, 0x000007C2, 0x000007C3,
//            0x000007C4, 0x000007C5, 0x000007C6, 0x000007C7, 0x000007C8, 0x000007C9, 0x00000966, 0x00000967,
//            0x00000968, 0x00000969, 0x0000096A, 0x0000096B, 0x0000096C, 0x0000096D, 0x0000096E, 0x0000096F,
//            0x000009E6, 0x000009E7, 0x000009E8, 0x000009E9, 0x000009EA, 0x000009EB, 0x000009EC, 0x000009ED,
//            0x000009EE, 0x000009EF, 0x00000A66, 0x00000A67, 0x00000A68, 0x00000A69, 0x00000A6A, 0x00000A6B,
//            0x00000A6C, 0x00000A6D, 0x00000A6E, 0x00000A6F, 0x00000AE6, 0x00000AE7, 0x00000AE8, 0x00000AE9,
//            0x00000AEA, 0x00000AEB, 0x00000AEC, 0x00000AED, 0x00000AEE, 0x00000AEF, 0x00000B66, 0x00000B67,
//            0x00000B68, 0x00000B69, 0x00000B6A, 0x00000B6B, 0x00000B6C, 0x00000B6D, 0x00000B6E, 0x00000B6F,
//            0x00000BE6, 0x00000BE7, 0x00000BE8, 0x00000BE9, 0x00000BEA, 0x00000BEB, 0x00000BEC, 0x00000BED,
//            0x00000BEE, 0x00000BEF, 0x00000C66, 0x00000C67, 0x00000C68, 0x00000C69, 0x00000C6A, 0x00000C6B,
//            0x00000C6C, 0x00000C6D, 0x00000C6E, 0x00000C6F, 0x00000CE6, 0x00000CE7, 0x00000CE8, 0x00000CE9,
//            0x00000CEA, 0x00000CEB, 0x00000CEC, 0x00000CED, 0x00000CEE, 0x00000CEF, 0x00000D66, 0x00000D67,
//            0x00000D68, 0x00000D69, 0x00000D6A, 0x00000D6B, 0x00000D6C, 0x00000D6D, 0x00000D6E, 0x00000D6F,
//            0x00000DE6, 0x00000DE7, 0x00000DE8, 0x00000DE9, 0x00000DEA, 0x00000DEB, 0x00000DEC, 0x00000DED,
//            0x00000DEE, 0x00000DEF, 0x00000E50, 0x00000E51, 0x00000E52, 0x00000E53, 0x00000E54, 0x00000E55,
//            0x00000E56, 0x00000E57, 0x00000E58, 0x00000E59, 0x00000ED0, 0x00000ED1, 0x00000ED2, 0x00000ED3,
//            0x00000ED4, 0x00000ED5, 0x00000ED6, 0x00000ED7, 0x00000ED8, 0x00000ED9, 0x00000F20, 0x00000F21,
//            0x00000F22, 0x00000F23, 0x00000F24, 0x00000F25, 0x00000F26, 0x00000F27, 0x00000F28, 0x00000F29,
//            0x00001040, 0x00001041, 0x00001042, 0x00001043, 0x00001044, 0x00001045, 0x00001046, 0x00001047,
//            0x00001048, 0x00001049, 0x00001090, 0x00001091, 0x00001092, 0x00001093, 0x00001094, 0x00001095,
//            0x00001096, 0x00001097, 0x00001098, 0x00001099, 0x000017E0, 0x000017E1, 0x000017E2, 0x000017E3,
//            0x000017E4, 0x000017E5, 0x000017E6, 0x000017E7, 0x000017E8, 0x000017E9, 0x00001810, 0x00001811,
//            0x00001812, 0x00001813, 0x00001814, 0x00001815, 0x00001816, 0x00001817, 0x00001818, 0x00001819,
//            0x00001946, 0x00001947, 0x00001948, 0x00001949, 0x0000194A, 0x0000194B, 0x0000194C, 0x0000194D,
//            0x0000194E, 0x0000194F, 0x000019D0, 0x000019D1, 0x000019D2, 0x000019D3, 0x000019D4, 0x000019D5,
//            0x000019D6, 0x000019D7, 0x000019D8, 0x000019D9, 0x00001A80, 0x00001A81, 0x00001A82, 0x00001A83,
//            0x00001A84, 0x00001A85, 0x00001A86, 0x00001A87, 0x00001A88, 0x00001A89, 0x00001A90, 0x00001A91,
//            0x00001A92, 0x00001A93, 0x00001A94, 0x00001A95, 0x00001A96, 0x00001A97, 0x00001A98, 0x00001A99,
//            0x00001B50, 0x00001B51, 0x00001B52, 0x00001B53, 0x00001B54, 0x00001B55, 0x00001B56, 0x00001B57,
//            0x00001B58, 0x00001B59, 0x00001BB0, 0x00001BB1, 0x00001BB2, 0x00001BB3, 0x00001BB4, 0x00001BB5,
//            0x00001BB6, 0x00001BB7, 0x00001BB8, 0x00001BB9, 0x00001C40, 0x00001C41, 0x00001C42, 0x00001C43,
//            0x00001C44, 0x00001C45, 0x00001C46, 0x00001C47, 0x00001C48, 0x00001C49, 0x00001C50, 0x00001C51,
//            0x00001C52, 0x00001C53, 0x00001C54, 0x00001C55, 0x00001C56, 0x00001C57, 0x00001C58, 0x00001C59,
//            0x0000A620, 0x0000A621, 0x0000A622, 0x0000A623, 0x0000A624, 0x0000A625, 0x0000A626, 0x0000A627,
//            0x0000A628, 0x0000A629, 0x0000A8D0, 0x0000A8D1, 0x0000A8D2, 0x0000A8D3, 0x0000A8D4, 0x0000A8D5,
//            0x0000A8D6, 0x0000A8D7, 0x0000A8D8, 0x0000A8D9, 0x0000A900, 0x0000A901, 0x0000A902, 0x0000A903,
//            0x0000A904, 0x0000A905, 0x0000A906, 0x0000A907, 0x0000A908, 0x0000A909, 0x0000A9D0, 0x0000A9D1,
//            0x0000A9D2, 0x0000A9D3, 0x0000A9D4, 0x0000A9D5, 0x0000A9D6, 0x0000A9D7, 0x0000A9D8, 0x0000A9D9,
//            0x0000A9F0, 0x0000A9F1, 0x0000A9F2, 0x0000A9F3, 0x0000A9F4, 0x0000A9F5, 0x0000A9F6, 0x0000A9F7,
//            0x0000A9F8, 0x0000A9F9, 0x0000AA50, 0x0000AA51, 0x0000AA52, 0x0000AA53, 0x0000AA54, 0x0000AA55,
//            0x0000AA56, 0x0000AA57, 0x0000AA58, 0x0000AA59, 0x0000ABF0, 0x0000ABF1, 0x0000ABF2, 0x0000ABF3,
//            0x0000ABF4, 0x0000ABF5, 0x0000ABF6, 0x0000ABF7, 0x0000ABF8, 0x0000ABF9, 0x0000FF10, 0x0000FF11,
//            0x0000FF12, 0x0000FF13, 0x0000FF14, 0x0000FF15, 0x0000FF16, 0x0000FF17, 0x0000FF18, 0x0000FF19,
//            0x0000FF21, 0x0000FF22, 0x0000FF23, 0x0000FF24, 0x0000FF25, 0x0000FF26, 0x0000FF41, 0x0000FF42,
//            0x0000FF43, 0x0000FF44, 0x0000FF45, 0x0000FF46, 0x000104A0, 0x000104A1, 0x000104A2, 0x000104A3,
//            0x000104A4, 0x000104A5, 0x000104A6, 0x000104A7, 0x000104A8, 0x000104A9, 0x00011066, 0x00011067,
//            0x00011068, 0x00011069, 0x0001106A, 0x0001106B, 0x0001106C, 0x0001106D, 0x0001106E, 0x0001106F,
//            0x000110F0, 0x000110F1, 0x000110F2, 0x000110F3, 0x000110F4, 0x000110F5, 0x000110F6, 0x000110F7,
//            0x000110F8, 0x000110F9, 0x00011136, 0x00011137, 0x00011138, 0x00011139, 0x0001113A, 0x0001113B,
//            0x0001113C, 0x0001113D, 0x0001113E, 0x0001113F, 0x000111D0, 0x000111D1, 0x000111D2, 0x000111D3,
//            0x000111D4, 0x000111D5, 0x000111D6, 0x000111D7, 0x000111D8, 0x000111D9, 0x000112F0, 0x000112F1,
//            0x000112F2, 0x000112F3, 0x000112F4, 0x000112F5, 0x000112F6, 0x000112F7, 0x000112F8, 0x000112F9,
//            0x00011450, 0x00011451, 0x00011452, 0x00011453, 0x00011454, 0x00011455, 0x00011456, 0x00011457,
//            0x00011458, 0x00011459, 0x000114D0, 0x000114D1, 0x000114D2, 0x000114D3, 0x000114D4, 0x000114D5,
//            0x000114D6, 0x000114D7, 0x000114D8, 0x000114D9, 0x00011650, 0x00011651, 0x00011652, 0x00011653,
//            0x00011654, 0x00011655, 0x00011656, 0x00011657, 0x00011658, 0x00011659, 0x000116C0, 0x000116C1,
//            0x000116C2, 0x000116C3, 0x000116C4, 0x000116C5, 0x000116C6, 0x000116C7, 0x000116C8, 0x000116C9,
//            0x00011730, 0x00011731, 0x00011732, 0x00011733, 0x00011734, 0x00011735, 0x00011736, 0x00011737,
//            0x00011738, 0x00011739, 0x000118E0, 0x000118E1, 0x000118E2, 0x000118E3, 0x000118E4, 0x000118E5,
//            0x000118E6, 0x000118E7, 0x000118E8, 0x000118E9, 0x00011C50, 0x00011C51, 0x00011C52, 0x00011C53,
//            0x00011C54, 0x00011C55, 0x00011C56, 0x00011C57, 0x00011C58, 0x00011C59, 0x00011D50, 0x00011D51,
//            0x00011D52, 0x00011D53, 0x00011D54, 0x00011D55, 0x00011D56, 0x00011D57, 0x00011D58, 0x00011D59,
//            0x00016A60, 0x00016A61, 0x00016A62, 0x00016A63, 0x00016A64, 0x00016A65, 0x00016A66, 0x00016A67,
//            0x00016A68, 0x00016A69, 0x00016B50, 0x00016B51, 0x00016B52, 0x00016B53, 0x00016B54, 0x00016B55,
//            0x00016B56, 0x00016B57, 0x00016B58, 0x00016B59, 0x0001D7CE, 0x0001D7CF, 0x0001D7D0, 0x0001D7D1,
//            0x0001D7D2, 0x0001D7D3, 0x0001D7D4, 0x0001D7D5, 0x0001D7D6, 0x0001D7D7, 0x0001D7D8, 0x0001D7D9,
//            0x0001D7DA, 0x0001D7DB, 0x0001D7DC, 0x0001D7DD, 0x0001D7DE, 0x0001D7DF, 0x0001D7E0, 0x0001D7E1,
//            0x0001D7E2, 0x0001D7E3, 0x0001D7E4, 0x0001D7E5, 0x0001D7E6, 0x0001D7E7, 0x0001D7E8, 0x0001D7E9,
//            0x0001D7EA, 0x0001D7EB, 0x0001D7EC, 0x0001D7ED, 0x0001D7EE, 0x0001D7EF, 0x0001D7F0, 0x0001D7F1,
//            0x0001D7F2, 0x0001D7F3, 0x0001D7F4, 0x0001D7F5, 0x0001D7F6, 0x0001D7F7, 0x0001D7F8, 0x0001D7F9,
//            0x0001D7FA, 0x0001D7FB, 0x0001D7FC, 0x0001D7FD, 0x0001D7FE, 0x0001D7FF, 0x0001E950, 0x0001E951,
//            0x0001E952, 0x0001E953, 0x0001E954, 0x0001E955, 0x0001E956, 0x0001E957, 0x0001E958, 0x0001E959,
//        };
//    }
//}
