# Runs Publish Test Results task for all test projects

# The tasks can be easily re-generated (except for any special cases) using the following powershell script

#$source_directory = "F:/Projects/J2N" # Change to your repo location
#
#$testProjects = Get-ChildItem -Path "$source_directory/**/*.csproj" -Recurse | ? { $_.Directory.Name.Contains(".Tests") }
#
#[string]$output = ''
#
#foreach ($testProject in $testProjects) {
#    $projectName = [System.IO.Path]::GetFileNameWithoutExtension($testProject)
#
#    $block = `
#        "- template: publish-test-results.yml`n" + `
#        "  parameters:`n" + `
#        "    testProjectName: '$projectName'`n" + `
#        "    framework: '${{ parameters.framework }}'`n + `
#        "    osName: '$`{`{ parameters.osName `}`}'`n" + `
#        "    testPlatform: '$`{`{ parameters.testPlatform `}`}'`n" + `
#        "    testResultsFormat: '$`{`{ parameters.testResultsFormat `}`}'`n" + `
#        "    testResultsArtifactName: '$`{`{ parameters.testResultsArtifactName `}`}'`n" + `
#        "    testResultsFileName: '$`{`{ parameters.testResultsFileName `}`}'`n" + `
#        "`n"
#
#    $output = "$output$block"
#}
#
#Set-Clipboard -Value $output

parameters:
  framework: '' # The target framework for display purposes.
  osName: '' # The name of the operating system for display purposes.
  testPlatform: 'x64' # Target platform architecture used for test execution. The allowed values depend on the type of architecture being targeted (x86, x86_64, x64, ARM, etc.).
  testResultsFormat: VSTest # Specify the format of the results files you want to publish. The following formats are supported: JUnit, NUnit, VSTest, XUnit, CTest
  testResultsArtifactName: 'testresults' # The name of the Azure DevOps build artifact where the test results will be published. Default 'testresults'.
  testResultsFileName: 'TestResults.trx' # The name of the file (not path) of the test results. Default 'TestResults.trx'.

steps:
- pwsh: |
    function EnsureNotNullOrEmpty([string]$param, [string]$nameOfParam) {
        if ([string]::IsNullOrEmpty($param)) {
            Write-Host "##vso[task.logissue type=error;]Missing template parameter \"$nameOfParam\""
            Write-Host "##vso[task.complete result=Failed;]"
        }
    }
    EnsureNotNullOrEmpty('${{ parameters.framework }}', 'framework')
    EnsureNotNullOrEmpty('${{ parameters.osName }}', 'osName')
    EnsureNotNullOrEmpty('${{ parameters.testPlatform }}', 'testPlatform')
    EnsureNotNullOrEmpty('${{ parameters.testResultsFormat }}', 'testResultsFormat')
    EnsureNotNullOrEmpty('${{ parameters.testResultsArtifactName }}', 'testResultsArtifactName')
    EnsureNotNullOrEmpty('${{ parameters.testResultsFileName }}', 'testResultsFileName')
  displayName: 'Validate Template Parameters'
  condition: eq(variables['System.Debug'], 'true')

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Concurrent.LurchTable.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.Dictionary.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.Extensions.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.HashSet.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.LinkedDictionary.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.LinkedHashSet.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.List.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.OrderedDictionary.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.Net5.HashSet.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.SortedDictionary.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.Generic.SortedSet.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Collections.ObjectModel.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.Runtime.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'

- template: publish-test-results.yml
  parameters:
    testProjectName: 'J2N.TestUtilities.Xunit.Tests'
    framework: '${{ parameters.framework }}'
    osName: '${{ parameters.osName }}'
    testPlatform: '${{ parameters.testPlatform }}'
    testResultsFormat: '${{ parameters.testResultsFormat }}'
    testResultsArtifactName: '${{ parameters.testResultsArtifactName }}'
    testResultsFileName: '${{ parameters.testResultsFileName }}'
