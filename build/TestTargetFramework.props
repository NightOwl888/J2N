<Project>

  <PropertyGroup>
    <!-- Changing this setting will allow testing on all target frameworks within Visual Studio 2017.
    Note that the main libraries are multi-targeted, so this has no effect on how they are compiled,
    this setting only affects the test projects. -->
    <!--<TargetFramework>net461</TargetFramework>-->
    <!--<TargetFramework>netcoreapp1.0</TargetFramework>
    <TargetFramework>netcoreapp2.0</TargetFramework>-->
    <TestAllTargetFrameworks>true</TestAllTargetFrameworks>

    <!-- Allow the build script to pass in the test frameworks to build for.
      This overrides the above TargetFramework setting. 
      TODO: Due to a parsing bug, we cannot pass a string with a ; to dotnet msbuild, so passing true as a workaround -->
    <TargetFrameworks Condition=" '$(TestAllTargetFrameworks)' == 'true' ">netcoreapp3.1;netcoreapp3.0;netcoreapp2.1;net461;net452;netstandard2.1;netstandard2.0</TargetFrameworks>
    <TargetFramework Condition=" '$(TargetFrameworks)' != '' "></TargetFramework>
  </PropertyGroup>

  <PropertyGroup Label="Mismatched Target Framework (to override the target framework under test)">
    <SetTargetFramework></SetTargetFramework>
    <SetTargetFramework Condition=" '$(TargetFramework)' == 'netcoreapp3.0' ">TargetFramework=netstandard2.1</SetTargetFramework>
    <SetTargetFramework Condition=" '$(TargetFramework)' == 'net452' ">TargetFramework=net40</SetTargetFramework>
    <SetTargetFramework Condition=" '$(TargetFramework)' == 'net461' ">TargetFramework=net45</SetTargetFramework>
  </PropertyGroup>
  
</Project>